{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger SCGame Documentation",
    "description": "API Documentation for the TicTakToe game",
    "contact": {
      "name": "Vasilii Mukhin",
      "email": "vasjenm@gmail.com"
    },
    "version": "v1",
    "x-logo": {
      "url": "/logo.png",
      "altText": "TicTak logo"
    }
  },
  "paths": {
    "/Game/Get": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get five last game",
        "description": "This endpoint will return 5 last games",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Game/Create": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Create new game",
        "description": "This endpoint will return a new game",
        "operationId": "Post",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Game/{id}/Get": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get game",
        "description": "This endpoint will return selected game",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            }
          }
        }
      }
    },
    "/Game/{id}/Move": {
      "put": {
        "tags": [
          "Game"
        ],
        "summary": "Get move in selected game",
        "description": "This endpoint will return game after make move",
        "operationId": "Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "xPos",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "yPos",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Invite/Create": {
      "post": {
        "tags": [
          "Invite"
        ],
        "summary": "Create invite",
        "description": "This endpoint will return a new invite for the selected game",
        "operationId": "Post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite is created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          }
        }
      }
    },
    "/Invite/{id}/Send": {
      "put": {
        "tags": [
          "Invite"
        ],
        "summary": "Send invite",
        "description": "This endpoint will send a selected invite to user",
        "operationId": "Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Invite/{id}/Accept": {
      "put": {
        "tags": [
          "Invite"
        ],
        "summary": "Accept income inviting",
        "description": "This endpoint will return received invite and start the game",
        "operationId": "Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite accepted, the game is started",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          }
        }
      }
    },
    "/Invite/{id}/Decline": {
      "delete": {
        "tags": [
          "Invite"
        ],
        "summary": "Reject invite",
        "description": "This endpoint will decline a received invite and delete him",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite #{id} was declined and removed from database"
          }
        }
      }
    },
    "/User/GetUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find user",
        "description": "This endpoint will return user's data if will be found",
        "operationId": "Get",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/User/Create": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "description": "This endpoint will create a new user and return user's data",
        "operationId": "Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/User/BearerToken": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get JWT Token",
        "description": "This endpoint will return JWT token for authorized user",
        "operationId": "Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT Token",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticationRequest": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Board": {
        "type": "object",
        "properties": {
          "boardId": {
            "type": "integer",
            "format": "int32"
          },
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Field": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "fieldIndex": {
            "type": "integer",
            "format": "int32"
          },
          "fieldValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Game": {
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/GameStatus"
          },
          "queue": {
            "type": "boolean",
            "nullable": true
          },
          "firstPlayerName": {
            "type": "string",
            "nullable": true
          },
          "firstPlayerId": {
            "type": "string",
            "nullable": true
          },
          "winner": {
            "type": "string",
            "nullable": true
          },
          "secondPlayerName": {
            "type": "string",
            "nullable": true
          },
          "secondPlayerId": {
            "type": "string",
            "nullable": true
          },
          "moves": {
            "type": "integer",
            "format": "int32"
          },
          "boardId": {
            "type": "integer",
            "format": "int32"
          },
          "board": {
            "$ref": "#/components/schemas/Board"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "GameStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Invite": {
        "type": "object",
        "properties": {
          "inviteId": {
            "type": "integer",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "firstPlayer": {
            "type": "string",
            "nullable": true
          },
          "secondPlayer": {
            "type": "string",
            "nullable": true
          },
          "game": {
            "$ref": "#/components/schemas/Game"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "Game",
      "description": "Controller which responsive for game process - get,create,move"
    },
    {
      "name": "Invite",
      "description": "Controller which responsive for inviting mechanism for selected game - creating,sending, accepting or declining"
    },
    {
      "name": "User",
      "description": "Controller which responsive for user methods - creating,finding, authentication"
    }
  ]
}